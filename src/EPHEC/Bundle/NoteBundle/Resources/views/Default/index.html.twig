{% extends "base.html.twig" %}
{% block content %}
    <!-- MODAL -->
    <div id="complete-dialog" class="modal fade" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">

                </div>
                <div class="modal-body" id="modal-body">

                    {{ form_start(form, {'attr': {'class': 'form-horizontal','id':'addMemoFrom'}}) }}
                    {{ form_errors(form) }}
                    <fieldset>
                        <legend>Ajout d'un mémo</legend>
                        <div class="form-feedback"></div>
                        <div class="form-group">
                            {{ form_label(form.datealarm, "Date", {'label_attr': {'class': 'col-lg-2 control-label'}}) }}
                            {{ form_errors(form.datealarm) }}
                            <div class="col-lg-10">
                                 <div class='input-group date' id='datePicker'>
                                     {{ form_widget(form.datealarm, {'attr': {'class': 'form-control'}}) }}
                                    <span class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </span>
                                 </div>

                                {# {{ form_widget(form.datealarm, {'attr': {'class': 'form-control', 'id':'datePicker'}}) }} #}
                            </div>
                        </div>
                        <div class="form-group">
                            {{ form_label(form.latitude, "Latitude", {'label_attr': {'class': 'col-lg-2 control-label'}}) }}
                            {{ form_errors(form.latitude) }}
                            <div class="col-lg-10">
                                {{ form_widget(form.latitude, {'attr': {'class': 'form-control','readonly':'readonly'}}) }}
                            </div>
                        </div>
                        <div class="form-group">
                            {{ form_label(form.longitude, "Longitude", {'label_attr': {'class': 'col-lg-2 control-label'}}) }}
                            {{ form_errors(form.longitude) }}
                            <div class="col-lg-10">
                                {{ form_widget(form.longitude, {'attr': {'class': 'form-control','readonly':'readonly'}}) }}
                            </div>
                        </div>
                        <div class="form-group">
                            {{ form_label(form.title, "Titre", {'label_attr': {'class': 'col-lg-2 control-label'}}) }}
                            {{ form_errors(form.title) }}
                            <div class="col-lg-10">
                                {{ form_widget(form.title, {'attr': {'class': 'form-control'}}) }}
                            </div>
                        </div>
                        <div class="form-group">
                            {{ form_label(form.memo, "Description", {'label_attr': {'class': 'col-lg-2 control-label'}}) }}
                            {{ form_errors(form.memo) }}
                            <div class="col-lg-10">
                                {{ form_widget(form.memo, {'attr': {'class': 'form-control'}}) }}
                            </div>
                        </div>

                        <div class="modal-footer">
                            <div class="col-lg-10 col-lg-offset-2">
                                <button class="btn btn-default" data-dismiss="modal">Annuler</button>
                                {{ form_widget(form.save, {'attr': {'class': 'btn btn-primary'}}) }}
                            </div>
                        </div>
                    </fieldset>
                    {{ form_rest(form) }}

                    {{ form_end(form) }}
                    <span id="modal-body-body"></span>
                </div>

               {#<div class="modal-footer">
                    <button class="btn btn-primary" data-dismiss="modal">Ajouter</button>
                </div>#}
            </div>
        </div>
    </div>
    <!-- FIN DE MODAL -->
    <div id="map"></div>
    <div style = float:left;>
    <div id="tabNote"><table id="tableNote" class="table table-striped table-hover ">
            <caption><h3>Vos mémos</h3></caption>
            <tr>
                <th></th>
                <th>Description</th>
                <th>Date</th>
                <th>Adresse</th>
            </tr>
        </table> </div>
    <div style="clear:left;"></div>
        <div id="infoPanel">
            <b>Adresse estimée:</b>
            <div id="address"></div>
        </div>
        <div style="clear:left;"></div>
    <button id ="createNote" data-toggle="modal" data-target="#complete-dialog" class="btn btn-fab btn-raised btn-material-red-500"><i class="mdi-image-edit"></i></button>
    </div>

    <style>
        h3{
            text-align: center;
        }
        #map {
            margin-left: 20px;
            width: 600px;
            height: 600px;
            float: left;
        }
        #infoPanel {
            text-align: center;
            margin-left: 10px;
        }
        #tabNote {

            margin-left: 10px;
        }
        #infoPanel div {
            margin-bottom: 5px;
        }
        #createNote{
            display: block;
            margin : auto;
        }
    </style>
    <link rel="stylesheet" href="//www.bruminator.eu/includes/css/bootstrap-datetimepicker.min.css">
    <script src="https://maps.googleapis.com/maps/api/js"></script>
    <script src="//www.bruminator.eu/includes/js/moment-with-locales.min.js"></script>
    <script src="//www.bruminator.eu/includes/js/bootstrap-datetimepicker.min.js"></script>
    <!-- <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script> -->
    <script>
        // https://developers.google.com/maps/documentation/javascript/examples/map-geolocation
        var geocoder = new google.maps.Geocoder();
        var map;
        var montableau = ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z'];
        var bounds = new google.maps.LatLngBounds ();
        var personnalMarker;
        function geocodePositionTab(pos,callback) {
            geocoder.geocode({
                latLng: pos
            }, function(responses) {
                if (responses && responses.length > 0) {
                    callback(responses[0].formatted_address);
                } else {
                    callback('Cannot determine address at this location.');
                }
            });
        }
        function geocodePosition(pos) {
            geocoder.geocode({
                latLng: pos
            }, function(responses) {
                if (responses && responses.length > 0) {
                    updateMarkerAddress(responses[0].formatted_address);
                } else {
                    updateMarkerAddress('Cannot determine address at this location.');
                }
            });
        }

        /*function updateMarkerStatus(str) {
            document.getElementById('markerStatus').innerHTML = str;
        }

        function updateMarkerPosition(latLng) {
            document.getElementById('info').innerHTML = [
                latLng.lat(),
                latLng.lng()
            ].join(', ');
        }*/

        function updateMarkerAddress(str) {
            document.getElementById('address').innerHTML = str;
        }
        //var map;
        function initialize() {
            var latLng = new google.maps.LatLng(50.8504500, 4.3487800);
            map = new google.maps.Map(document.getElementById('map'), {
                center: latLng,
                zoom: 8
            });
            var infoWindow = new google.maps.InfoWindow({map: map});
            // Try HTML5 geolocation.
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function(position) {
                    var pos = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };
                    infoWindow.setPosition(pos);
                    infoWindow.setContent('Location found.');
                    map.setCenter(pos);
                    personnalMarker.setPosition(pos);
                    personnalMarker.setVisible(true);
                    //updateMarkerPosition(map.getCenter());
                    geocodePosition(map.getCenter());
                }, function() {
                    handleLocationError(true, infoWindow, map.getCenter());
                });
            } else {
                // Browser doesn't support Geolocation
                handleLocationError(false, infoWindow, map.getCenter());
                personnalMarker.setVisible(true);
                updateMarkerPosition(map.getCenter());
                personnalMarker.setVisible(true);
                geocodePosition(map.getCenter());
            }
            personnalMarker = new google.maps.Marker({
                position: map.getCenter(),
                map: map,
                draggable: true,
                title: 'Ajouter un mémo',
                icon: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png',
                visible: false
            });

            // Update current position info.

            // Add dragging event listeners.
            google.maps.event.addListener(personnalMarker, 'dragstart', function() {
                updateMarkerAddress('Déplacement...');
            });

            /*google.maps.event.addListener(personnalMarker, 'drag', function() {
                //updateMarkerStatus('Dragging...');
                //updateMarkerPosition(personnalMarker.getPosition());
            });*/

            google.maps.event.addListener(personnalMarker, 'dragend', function() {
                //updateMarkerStatus('Drag ended');
                geocodePosition(personnalMarker.getPosition());
            });
            google.maps.event.addListener(map, 'rightclick', function(event) {
                personnalMarker.setPosition(event.latLng);
                geocodePosition(personnalMarker.getPosition());
            });
            showNote();
            map.fitBounds(bounds);
            map.setCenter(bounds.getCenter());
            createTable();

        }
        function handleLocationError(browserHasGeolocation, infoWindow, pos) {
            infoWindow.setPosition(pos);
            infoWindow.setContent(browserHasGeolocation ?
                    'Error: The Geolocation service failed.' :
                    'Error: Your browser doesn\'t support geolocation.');
        }

        google.maps.event.addDomListener(window, 'load', initialize);
        function showNote() {
            var tab = {{ note | raw }};
            $.each(tab, function (i, item) {
                var marker = new google.maps.Marker({
                    position: {lat: item.lat, lng: item.long},
                    map: map,
                    animation: google.maps.Animation.DROP,
                    icon:'http://www.google.com/mapfiles/marker'+montableau[i]+'.png',
                    //icon: 'http://maps.google.com/mapfiles/ms/icons/green-dot.png',
                    title: item.desc
                });
                //console.log(item.desc)
                bounds.extend(marker.getPosition());
            });
        }
        function createTable(){
            var tab = {{ note | raw }};
            $.each(tab, function (i, item) {
                var callback;
                geocodePositionTab(new google.maps.LatLng(item.lat,item.long),function(callback){
                    document.getElementById('tableNote').innerHTML += '<tr><td><img src="http://www.google.com/mapfiles/marker'+montableau[i]+'.png"/></td><td>'+item.desc+'</td><td>'+item.date+'</td><td>'+ callback +'</td></tr>';
                });

            });

        }

        $('#createNote').on('click', function() {
            //$('#modal-body-body').empty().append('Lat = '+ personnalMarker.getPosition().lat()+' Long ='+personnalMarker.getPosition().lng());
            $('#form_latitude').empty().val(personnalMarker.getPosition().lat());
            $('#form_longitude').empty().val(personnalMarker.getPosition().lng());
        });
        $(function () {
            $('#form_datealarm').datetimepicker({locale:"fr",showTodayButton: true,
                stepping : 5,
                format : "DD-MM-YYYY HH:mm"});
        });


        $(function (){
            $('#addMemoFrom').submit(function(e){
                e.preventDefault();
                $form =$(this);
                var that = $(this),
                        url = that.attr('action'),
                        method = that.attr('method'),
                        data = {};
                console.log(method);
                that.find('[name]').each(function(index, value){
                    //console.log(value);
                    var that = $(this),
                            name = that.attr('name'),
                            value = that.val();
                    data[name]=value;
                    //console.log(that.val());
                });
                $.ajax({
                    url: url,
                    type: method,
                    data: data,
                    success: function(response){
                        console.log(response)
                    }
                });
               /* $value=$(this).serialize();
                document.getElementById('modal-body-body').innerHTML = $value;


                $.post(document.location.url, $(this).serialize(), function(data){
                    $feedback = $("<div>").html(data).find(".form-feedback").hide();

                    $form.prepend($feedback);
                    //document.getElementById('modal-body-body').innerHTML = $data;
                    $feedback.fadeIn(1500);
                });*/
            });
        });
    </script>
{% endblock %}

{#Hello {{ name }}!#}
